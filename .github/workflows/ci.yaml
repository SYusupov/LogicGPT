name: CI Pipeline

on:
  # Runs the pipeline on every push or a pull request to the main branch
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main

jobs:
  ## Linting the code
  lint:
    name: Code Quality Checks (Linting)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
    
      - name: Set up Python
        uses: actions/setup-python@v4 # Todo: check what version to use
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8  # Linter for Python
      
      - name: Run Linter (flake8) on all Python Files
        run: |
          flake8 .
  
  ## Building the docker image
  docker_build: 
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Clean up Docker environment
        run: docker system prune -af --volumes

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/logicgpt:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/logicgpt:${{ github.sha }}
  
  # ## Testing if the API works correctly
  # test_api: 
  #   needs: docker_build  # Only run this after the Docker build is successful
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
      
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Test API
  #       run: |
  #         docker compose up --build